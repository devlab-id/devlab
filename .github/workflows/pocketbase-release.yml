name: pocketbase-release

on:
  push:
    paths:
      - "others/pocketbase/*"
      - ".github/workflows/pocketbase-release.yml"
    branches:
      - next
      - main
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: "coollabsio/pocketbase"
  VERSION: "0.12.3"

jobs:
  amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: others/pocketbase/
          platforms: linux/amd64
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
  aarch64:
    runs-on: [self-hosted, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: others/pocketbase/
          platforms: linux/aarch64
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-aarch64
  merge-manifest:
    runs-on: ubuntu-latest
    needs: [amd64, aarch64]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN  }}
      - name: Create & publish manifest
        run: |
          docker buildx imagetools create --amend ${{ env.IMAGE_NAME }}:${{ env.VERSION }}-aarch64 --tag ${{ env.IMAGE_NAME }}:${{ env.VERSION }}
