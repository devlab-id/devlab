{
  "name": "coolify",
  "description": "An open-source & self-hostable Heroku / Netlify alternative.",
  "version": "3.1.3",
  "license": "AGPL-3.0",
  "scripts": {
    "db:studio": "pnpm run --filter coolify-api db:studio",
    "db:push": "pnpm run --filter coolify-api db:push",
    "db:seed": "pnpm run --filter coolify-api db:seed",
    "db:migrate": "pnpm run --filter coolify-api db:migrate",
    "format": "run-p -l -n format:*",
    "format:api": "NODE_ENV=development pnpm run --filter coolify-api format",
    "lint": "run-p -l -n lint:*",
    "lint:api": "NODE_ENV=development pnpm run --filter coolify-api lint",
    "dev": "run-p -l -n dev:*",
    "dev:api": "NODE_ENV=development pnpm run --filter coolify-api dev",
    "dev:ui": "NODE_ENV=development pnpm run --filter coolify-ui dev",
    "dev:shared": "NODE_ENV=development pnpm run --filter shared dev",
    "build": "NODE_ENV=production pnpm build:shared && run-p -n build:api build:ui",
    "build:api": "NODE_ENV=production pnpm run --filter coolify-api build",
    "build:ui": "NODE_ENV=production pnpm run --filter coolify-ui build",
    "build:shared": "NODE_ENV=production pnpm run --filter shared build",
    "dockerlogin":"echo $DOCKER_PASS | docker login --username=$DOCKER_USER --password-stdin",
    "release:staging:amd": "cross-var docker buildx build --platform linux/amd64 -t coollabsio/coolify:$npm_package_version --push .",
    "release:local":"rm -fr ./local-serve && mkdir ./local-serve && pnpm build && cp -Rp apps/api/build/* ./local-serve && cp -Rp apps/ui/build/ ./local-serve/public && cp -Rp apps/api/prisma/ ./local-serve/prisma && cp -Rp apps/api/package.json ./local-serve && env | grep '^COOLIFY_' > ./local-serve/.env && cd ./local-serve && pnpm install . && pnpm start"
  },
  "devDependencies": {
    "cross-var": "1.1.0",
    "npm-run-all": "4.1.5"
  },
  "keywords": [
    "docker",
    "self-host",
    "iaas",
    "heroku",
    "netlify",
    "open-source",
    "coolify"
  ]
}